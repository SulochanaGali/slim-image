# SonarQube properties file for the board-ctl project.
# All paths are relative to the repository root.
# Must be unique in a given SonarQube instance
sonar.projectKey=key-python-demoapp
# Defaults to project key
sonar.projectName=python-demoapp
# Defaults to 'not provided', provided at command line argument to get the version based on conanfile.py
# sonar.projectVersion=0.1
# Description
sonar.projectDescription="Infrastructure Tool to communication and control our Tegra's"

sonar.sources=.
# Use the compilation database to find source files (sonar.sources must be specified) => provided as parameter in the Jenkinsfile
# sonar.cxx.jsonCompilationDatabase=build/compile_commands.json

# By default the community language plugin sonar-cxx is disabled in
# favor of the SonarCFamily plugin. To enable sonar-cxx while disabling SonarCFamily
sonar.cxx.file.suffixes=.hxx, .hpp, .hh, .h, .h++, .ipp, .cxx, .cpp, .cc, .c, .c++, .inl, .py

# The property sonar.language has been dropped completely
#sonar.c.file.suffixes=.disable_sonarcfamily_c
#sonar.cpp.file.suffixes=.disable_sonarcfamily_cpp # use cxx instead of cpp

# Tell SonarQube where to find the compiler output
#sonar.cxx.gcc.reportPath=compiler_output.txt

# Tell SonarQube where to find the CppCheck output
#sonar.cxx.cppcheck.reportPaths=cppcheck_report.xml

# Set coverage settings
# sonar.cxx.coverage.reportPath=coverage_report.xml

# Disable code coverage until we setup the environment for it
sonar.coverage.exclusions=**/*.*

# Encoding of the source code
sonar.sourceEncoding=UTF-8

# configure sonar log output (e.g. DEBUG)
sonar.log.level=INFO